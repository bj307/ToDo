/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package br.com.todo.view;

import br.com.todo.NO.NoTarefa;
import br.com.todo.NO.QuickSort;
import br.com.todo.model.Pessoa;

/**
 *
 * @author kaior
 */
public class TarefaList extends javax.swing.JPanel {

    NoTarefa.Lista listaT;
    NoTarefa.ListaConcluida listaC;
    Pessoa logado;

    /**
     * Creates new form TarefaList
     */
    public TarefaList(NoTarefa.Lista list, NoTarefa.ListaConcluida listC, Pessoa login) {
        initComponents();
        this.listaT = list;
        this.listaC = listC;
        this.logado = login;
    }

    //metodo atualiza a lista de tarefas abertas
    public void atualizaLista() {
        //chama o metodo de ordenação para organizar de acordo com a data de cada tarefa
        QuickSort.quicksortT(listaT);
        //cria um novo nó que recebe o inicio da lista
        NoTarefa noT = listaT.getInicio();
        //limpa o painel lista
        lista.removeAll();
        if (listaT.getTamanho() > 10) {
            lista.setLayout(new java.awt.GridLayout(listaT.getTamanho(), 1));
        } else {
            lista.setLayout(new java.awt.GridLayout(10, 1));
        }
        //enquanto o nó lista não for nulo, o painel irá adicionar uma tela para cada
        while (noT != null) {
            if (logado.getTipo().equals("GERENTE")) {
                //o painel adiciona uma tela com os dados do nó
                lista.add(add(new TarefaUni(noT, listaT, listaC)), 0);
                //o nó recebe o próximo para continuar
                noT = noT.getProximo();
                lista.repaint();
                this.repaint();
            } else {
                if (noT.getTarefa().getPessoa().getCodigo() == logado.getCodigo()) {
                    //o painel adiciona uma tela com os dados do nó
                    lista.add(add(new TarefaUni(noT, listaT, listaC)), 0);
                    //o nó recebe o próximo para continuar
                    noT = noT.getProximo();
                    lista.repaint();
                    this.repaint();
                } else {
                    noT = noT.getProximo();
                    lista.repaint();
                    this.repaint();
                }
            }

        }
    }

    //mesma lógica do metodo anterior, agora usando a lista de tarefas concluidas
    public void atualizaListaC() {
        QuickSort.quicksortC(listaC);
        NoTarefa noT = listaC.getInicio();
        lista.removeAll();
        if (listaC.getTamanho() > 10) {
            lista.setLayout(new java.awt.GridLayout(listaC.getTamanho(), 1));
        } else {
            lista.setLayout(new java.awt.GridLayout(10, 1));
        }
        while (noT != null) {
            if (logado.getTipo().equals("GERENTE")) {
                //o painel adiciona uma tela com os dados do nó
                lista.add(add(new TarefaUni(noT, listaT, listaC)), 0);
                //o nó recebe o próximo para continuar
                noT = noT.getProximo();
                lista.repaint();
                this.repaint();
            } else {
                if (noT.getTarefa().getPessoa().getCodigo() == logado.getCodigo()) {
                    //o painel adiciona uma tela com os dados do nó
                    lista.add(add(new TarefaUni(noT, listaT, listaC)), 0);
                    //o nó recebe o próximo para continuar
                    noT = noT.getProximo();
                    lista.repaint();
                    this.repaint();
                } else {
                    noT = noT.getProximo();
                    lista.repaint();
                    this.repaint();
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lista = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Montserrat Medium", 0, 14)); // NOI18N
        jLabel1.setText("Hora");

        jLabel2.setFont(new java.awt.Font("Montserrat Medium", 0, 14)); // NOI18N
        jLabel2.setText("Tarefa");

        jLabel3.setFont(new java.awt.Font("Montserrat Medium", 0, 14)); // NOI18N
        jLabel3.setText("Status");

        lista.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout listaLayout = new javax.swing.GroupLayout(lista);
        lista.setLayout(listaLayout);
        listaLayout.setHorizontalGroup(
            listaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 787, Short.MAX_VALUE)
        );
        listaLayout.setVerticalGroup(
            listaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 345, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(lista);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(122, 122, 122)
                .addComponent(jLabel3)
                .addGap(135, 135, 135))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 787, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel lista;
    // End of variables declaration//GEN-END:variables
}
